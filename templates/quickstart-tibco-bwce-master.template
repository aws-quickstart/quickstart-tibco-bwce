{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "TIBCO BWCE 2.3.3. This template builds a base TIBCO BWCE docker image, creates an ECR repo with name 'tibco-bwce' and pushes base docker image into the ECR repo. It then deploys a VPC, with a pair of public and private subnets spread across two Availabilty Zones. It deploys an Internet Gateway, with a default route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), and default routes for them in the private subnets. It then deploys a highly available ECS cluster of EC2 instances (ECS Hosts) launched from the TIBCO BWCE AMI in an AutoScaling Group,  with the EC2 instances distributed across multiple Availability Zones. This template also provides you an option to create an S3 bucket and folder structure inside the bucket required for base docker image customization. This template also provides you an option to install BWCE Monitoring Application.\n",
    "Parameters": {
        "ClusterSize": {
            "Description": "Number of EC2 instances to be created initially in the ECS Cluster (1-1000). This value will be used to set the Min, Max & Desired count of instances in the Auto Scaling Group.",
            "Type": "Number",
            "Default": 2,
            "MaxValue": 1000,
            "MinValue": 1,
            "ConstraintDescription": "ClusterSize must be numeric and between 1 and 1000."
        },
        "CIDRBlockCluster": {
            "Description": "CIDR block for the VPC",
            "Type": "String",
            "Default": "10.180.0.0/16",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "Default": "10.180.2.0/21",
            "Type": "String",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR Block for the public subnet running your Monitoring Application"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "Default": "10.180.8.0/21",
            "Type": "String",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR Block for the public subnet 2"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "Default": "10.180.24.0/21",
            "Type": "String",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for private subnet 1."
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "Default": "10.180.32.0/21",
            "Type": "String",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Description": "CIDR block for private subnet 2."
        },
        "AdminIngressLocation": {
            "Description": "CIDR block (IP address range) to allow SSH and VNC access to your BWCE studio instance. Use 0.0.0.0/0 to allow access from all locations. You can always manually change this later if needed.",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "AvailabilityZones": {
	    "Type": "List<AWS::EC2::AvailabilityZone::Name>",
	    "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved. 2 AZs are used for this deployment."
	},
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "Default": "quickstart-reference",
            "Type": "String",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-). Leave this as the default value if you are running the quickstart as is."
        },
        "QSS3KeyPrefix": {
    	     "AllowedPattern": "^[0-9a-zA-Z-/]*$",
    	     "Default": "tibco/bwce/latest/",
    	     "Type": "String",
    	     "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
    	     "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with a hyphen (-). Leave this as the default value if you are running the quickstart as is."
    	},
        "InstanceType": {
            "Description": "Select an instance type for EC2 instances to be created in the ECS cluster.",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "f1.2xlarge",
                "f1.16xlarge",
                "g3.4xlarge",
                "g3.8xlarge",
                "g3.16xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "p2.xlarge",
                "p2.8xlarge",
                "p2.16xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge"
            ],
            "ConstraintDescription": "InstanceType must be a valid EC2 instance type."
        },
        "InstanceTypeStudioImage": {
            "Description": "Select an instance type that runs your BusinessWorks Container Edition studio.",
            "Type": "String",
            "Default": "m3.large",
            "AllowedValues": [
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge"
            ],
            "ConstraintDescription": "InstanceTypeStudioImage must be a valid EC2 instance type."
        },
        "VolSize": {
            "Description": "Volume Size (GB) for EC2 instances.",
            "Type": "Number",
            "Default": 30,
            "MaxValue": 16384,
            "MinValue": 30,
            "ConstraintDescription": "VolumeSize must be numeric and between 30 and 16384."
        },
        "VolSizeStudioImage": {
            "Description": "Volume Size  (GB) for EC2 instance running BusinessWorks Container Edition studio.",
            "Type": "Number",
            "Default": 40,
            "MaxValue": 100,
            "MinValue": 40,
            "ConstraintDescription": "VolSizeStudioImage must be numeric and between 40 and 100."
        },
        "KeyName": {
            "Description": "Select an existing key pair. You must provide existing key pair to be able to SSH into EC2 instances.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "MinLength": 1,
            "MaxLength": 64,
            "AllowedPattern": "[-_ a-zA-Z0-9]*",
            "ConstraintDescription": "Must be the name of an existing key pair. It can contain only alphanumeric characters, spaces, dashes and underscores."
        },
        "ExtBucket": {
            "Description": "Do you want to create a new S3 bucket & required folder structure for extending base image? You can upload third-party drivers, OSGI bundles, certificates, plugins etc. in this bucket to extend the base image later.",
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "No",
            "ConstraintDescription": "The value should be Yes/No."
        },
        "ExtBucketName": {
            "Description": "Provide name for S3 bucket to be created, if you selected the previous option as 'Yes'.",
            "Type": "String",
            "MaxLength": 63,
            "ConstraintDescription": "Must comply with AWS S3 bucket naming convention."
        },
        "PluginList": {
            "Description": "Provide list of IDs of supported Plug-ins to be added in the customized image, e.g. for including Data Conversion, MongoDB and S3 plug-ins, provide the value as 'DC,MongoDB,S3'. This list should be comma separated and should not include any space inbetween. The list of supported Plug-ins are - AMQP (Plug-in for AMQP), DC (Plug-in for Data Conversion), DCRM (Plug-in for Microsoft Dynamics CRM), Kafka (Plug-in for Apache Kafka), MongoDB (Plug-in for MongoDB), MQ (Plug-in for WebSphere MQ), OData (Plug-in for OData), S3 (Plug-in for Amazon S3), ServiceNow (Plug-in for ServiceNow), SFDC (Plug-in for Salesforce.com).",
            "Type": "String"
        },
        "EcrRepoName": {
            "Description": "Name of EC2 Container Registry (ECR) to be created to store customized image. This image will have the plugins you selected installed within it.",
            "Type": "String",
            "MinLength": 4,
            "MaxLength": 64,
            "ConstraintDescription": "EcrRepoName parameter is mandatory."
        },
        "InstMonitoring": {
            "Description": "Do you want to install monitoring application?",
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "No",
            "ConstraintDescription": "The value should be Yes/No."
        },
        "MonInstanceType": {
            "Description": "Select an instance type for Monitoring EC2 instance.",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "f1.2xlarge",
                "f1.16xlarge",
                "g3.4xlarge",
                "g3.8xlarge",
                "g3.16xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "p2.xlarge",
                "p2.8xlarge",
                "p2.16xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge"
            ],
            "ConstraintDescription": "InstanceType must be a valid EC2 instance type."
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "AdminIngressLocation"
                        "CIDRBlockCluster",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR"
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Quickstart Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                },
                {
                    "Label": {
                        "default": "ECS Cluster Configuration"
                    },
                    "Parameters": [
                        "KeyName"
                        "ClusterSize",
                        "InstanceType",
                        "VolSize",
                        "InstanceTypeStudioImage",
                        "VolSizeStudioImage"
                    ]
                },
                {
                    "Label": {
                        "default": "Base Image Customization Configuration"
                    },
                    "Parameters": [
                        "EcrRepoName",
                        "PluginList",
                        "ExtBucket",
                        "ExtBucketName"
                    ]
                },
                {
                    "Label": {
                        "default": "Monitoring Configuration"
                    },
                    "Parameters": [
                        "InstMonitoring",
                        "MonInstanceType"
                    ]
                }
            ],
            "ParameterLabels": {
                "CIDRBlockCluster": {
                    "default": "Cluster CIDR Block:"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "AdminIngressLocation": {
                    "default": "Admin Ingress Location"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private Subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "ClusterSize": {
                    "default": "ECS Cluster Size:"
                },
                "InstanceType": {
                    "default": "ECS Cluster Instance Type:"
                },
                "VolSize": {
                    "default": "ECS Cluster Volume Size:"
                },
                "InstanceTypeStudioImage": {
                    "default": "Studio EC2 Instance Type:"
                },
                "VolSizeStudioImage": {
                    "default": "Studio EC2 Volume Size:"
                },
                "KeyName": {
                    "default": "Key Pair:"
                },
                "ExtBucket": {
                    "default": "Create S3 Bucket for Base Image Customization?"
                },
                "ExtBucketName": {
                    "default": "S3 Bucket Name:"
                },
                "PluginList": {
                    "default": "List of Plug-ins:"
                },
                "EcrRepoName": {
                    "default": "ECR Repo Name"
                },
                "InstMonitoring": {
                    "default": "Install Monitoring Application?"
                },
                "MonInstanceType": {
                    "default": "Monitoring Instance Type:"
                }
            }
        }
    },
    "Conditions": {
        "HasKeyName": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "KeyName"
                        },
                        ""
                    ]
                }
            ]
        },
        "CreateS3Bucket": {
            "Fn::Equals": [
                {
                    "Ref": "ExtBucket"
                },
                "Yes"
            ]
        },
        "HasVolSize": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "VolSize"
                        },
                        ""
                    ]
                }
            ]
        },
        "HasVolStudioSize": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "VolSizeStudioImage"
                        },
                        ""
                    ]
                }
            ]
        },
        "InstallMonitoringApp": {
            "Fn::Equals": [
                {
                    "Ref": "InstMonitoring"
                },
                "Yes"
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "us-east-1": {
                "AMI": "ami-bb36d5c6"
            },
            "us-east-2": {
                "AMI": "ami-fb5a6d9e"
            },
            "us-west-1": {
                "AMI": "ami-96878ff6"
            },
            "us-west-2": {
                "AMI": "ami-1273fc6a"
            },
            "eu-west-1": {
                "AMI": "ami-90b0c9e9"
            },
            "eu-west-2": {
                "AMI": "ami-37fc1850"
            },
            "eu-central-1": {
                "AMI": "ami-b72b49d8"
            },
            "ap-northeast-1": {
                "AMI": "ami-6da8d20b"
            },
            "ap-southeast-1": {
                "AMI": "ami-19d69865"
            },
            "ap-southeast-2": {
                "AMI": "ami-cfd512ad"
            },
            "ca-central-1": {
                "AMI": "ami-66df5802"
            }
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template",
                "Parameters": {
                    "KeyPairName": {
                        "Ref": "KeyName"
                    },
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "NumberOfAZs": "2",
                    "VPCCIDR": {
                        "Ref": "CIDRBlockCluster"
                    }
                }
            }
        },
        "BWCEStack" :{
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL":  "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/quickstart-tibco-bwce.template",
                "Parameters": {
                    "KeyName": {
                        "Ref": "KeyName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "VPCCIDR": {
                        "Ref": "CIDRBlockCluster"
                    },
                    "AdminIngressLocation": {
                        "Ref": "AdminIngressLocation"
                    },
                    "ClusterSize": {
                        "Ref": "ClusterSize"
                    },
                    "InstanceType": {
                        "Ref": "InstanceType"
                    },
                    "VolSize": {
                        "Ref": "VolSize"
                    },
                    "InstanceTypeStudioImage": {
                        "Ref": "InstanceTypeStudioImage"
                    },
                    "VolSizeStudioImage": {
                        "Ref": "VolSizeStudioImage"
                    },
                    "EcrRepoName": {
                        "Ref": "EcrRepoName"
                    },
                    "PluginList": {
                        "Ref": "PluginList"
                    },
                    "ExtBucket": {
                        "Ref": "ExtBucket"
                    },
                    "ExtBucketName": {
                        "Ref": "ExtBucketName"
                    },
                    "InstMonitoring": {
                        "Ref": "InstMonitoring"
                    },
                    "MonInstanceType": {
                        "Ref": "MonInstanceType"
                    }
                }
            }
        }
    }
}
